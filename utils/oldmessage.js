const Messages = {
    // Server Issue Messages
    InternalServerError: "Access Denied : Contact Your Admin",
    // JWT Messages
    UnableToCreateJWTToken: "Unable to create a JWT Token",
    InvalidJWTToken: "Invalid JWT Token",
    JWTTokenRequired: "Please provide a JWT Token",
    Forbidden: "You do not have permission to access this module",
    CountryStateCityCombination: "country, state , city , combination is wrong , please check the country, state, and city value",
    // Customer Controller message for customer login apis etc.
    SuperOrganizationAPis: {
        OrganizationEmailAlreadyExist: 'Organization Email Already Exists, Try With Another Email',
        OrganizationCreateFail: 'Unable to save',
        OrganizationCreateSuccess: 'Records saved',
    },
    CustomerUserApis: {
        CustomerTestApiResponseMessage: "Customer Test Api Running success",
        CustomerTryCatchLogMessage: "Customer Login APis",
        CustomerEmailAlreadyExist: "User already exists for the given email address",
        CustomerTryCatchApiResponseMessage: "Access Denied, Please contact administrator.",
        CustomerLoginSuccess: "Login Successful",
        CustomerUserNameNotFound: "Please Enter correct User Name",
        CustomerUserPasswordIncorrect: "Password Incorrect,Please User Different Password",
        CustomerLoginFail: "Some thing went wrong, please try Again",
        CustomerSaveSuccess: "Records saved",
        CustomerSaveFail: "Unable to save",
        CustomerLoginFail: "Unable to login",
        CustomerAPisFormValidationError: "Some key is missing , please check",
        CustomerRoleIsNotExist: "Role Not exist, please check",
        CustomerUserNotExist: "User not exist Please try another User",
        CustomerOrganizationConfigNotExist: "User not exist Please try another User",
        CustomerOtpSendSuccess: "Otp Send Success",
        CustomerResendOtpNotAllowed: "Resend Otp Not allowed to send, Please initiate First Reset",
        CustomerOtpNotMatched: "Otp not Matched, Please try Another otp.",
        CustomerPasswordUpdateSuccess: "Records Updated"
    },
    SettingModuleApis: {
        SettingProfileGetSuccess: "Profile Loaded Success",
        SettingProfileGetFail: "Unable to load profile data",
        SettingProfileUserNotExists: "User not Found",
        SettingProfileUpdateSuccess: "Records updated",
        SettingProfileUpdateFail: "Not updated",
        SettingProfileUserImageUpdateSuccess: "Records updated",
        SettingOrganizationGetSuccess: "Records loaded",
        SettingOrganizationLogoUpdateSuccess: "Records updated",
        SettingOrganizationUpdateSuccess: "Record updated",
        SettingOrganizationUpdateFail: "Not updated",
        SettingOrganizationNotExists: "Records not found",
        SettingOrganizationDeliveryAddressUpdateSuccess: "Records updated",
        SettingOrganizationDeliveryAddressSaveSuccess: "Records saved",
        SettingOrganizationDeliveryAddressUpdateFail: "Not updated",
        SettingOrgDocumentUploadedSuccess: 'Uploaded success',
        SettingOrgDocumentSaveSuccess: 'Uploaded success',
        SettingOrgDocumentDeleteSuccess: 'Uploaded success',
        SettingOrgDocumentNotExist: 'Document not exists',
        SettingOrgDocumentUploadedFail: 'Not uploaded',
        SettingOrgDocumentGetSuccess: 'Records Loaded',
        SettingProfilePasswordUpdatedSuccess: "Records updated",
        SettingProfilePasswordUpdatedFail: "not updated",
        SettingProfilePasswordValidation: "Please check password pattern (min 8) or password and confirm password not matched",
        CountryStateCityCombination: "orgCountry, orgState , orgCity , combination is wrong , please check the country, state, and city value",
        SettingOrganizationBillingAddressGetSuccess: "Records Loaded",
        SettingOrganizationDeliveryAddressGetSuccess: "Records Loaded",
    },
    // Entities Success Messages
    EntityNotAvailable: "Access Denied : Contact Your Admin",//"No data is associated with the given ID",
    FormValidationError: "Validation Error",//"No data is associated with the given ID",
    EntityCreated: "Data saved successfully",
    EntityDeleted: "Data deleted successfully",
    EntityUpdated: "Data updated successfully",
    EntityFetched: "Data fetched successfully",

    InvalidCredentials: "Invalid email or password",
    LoginSuccessful: "User login successful",

    // Entities Error Messages
    EntityExists: "Access Denied : Contact Your Admin",//"An entity is already associated with the given ID",
    UnableToSaveEntity: "Unable to save data",
    UnableToGetEntity: "Unable to fetch data",
    UnableToUpdateEntity: "Unable to update data",
    UnableToDeleteEntity: "Unable to delete data",
    UnableToGetEntityById: "Unable to get data by ID",
    ForeignKeyConstraintError: "Access Denied : Contact Your Admin",//"Please Provide Valid Values For Selected Ids",
    // Validation Messages
    InvalidEmail: "Please provide a valid email address",
    InvalidPassword: "Please provide a password in a valid format",
    InvalidPasswordConfirmPassword: "Password and confirm password do not match",
    InvalidData: "Please provide valid data or data is not in a valid format",
    IdRequired: "Please provide an ID",
    PositiveValuesRequired: "Please provide a value greater than or equal to 0",
    BadResponse: "Provide Valid Values Or You Are Not Allowed To Used The given Values",

    // Required Messages
    EmailRequired: "Email address is required",
    PasswordRequired: "Password is required",
    ConfirmPasswordRequired: "Confirm password is required",
    NameRequired: "Name is required",
    PhoneNumberRequired: "Phone number is required",
    CountryRequired: "Country is required",
    StateRequired: "State is required",
    CityRequired: "City is required",
    ZipRequired: "Zip code is required",
    CompanyNameRequired: "Company name is required",
    DepartmentRequired: "Department is required",
    PositionRequired: "Position is required",
    RoleRequired: "Role is required",
    ModuleAccessRequired: "Module access is required",

    OrganisationExist: "An organization with this name already exists. Please try another name.",
    OrganisationRequired: "Organization name is required",
    RoleExisted: "The role you are creating already exists",
    RoleNotAllowed: "You are not allowed to create this role",
    RoleNotExist: "The role does not exist",
    CustomerSideVendorRegistrationApis: {
        RoleNotSaved: "Unable To Save Vendor",
        FirstPageGeneralInfoSave: "Records saved",
        FirstPageEmailCheck: "Email ID is already registered with another vendor. Please try using a different email ID",
        NotRegisterFirstPageCheckOrganizationInfo: "Not register, Please try again",
        CountryStateCityCheck: "Country, state , city , combination is wrong , please check the country, state, and city",
        UpdateOrganizationSuccess: "Records updated",
        UpdateOrganizationFail: "Records not updated",
        GetOrganizationInfoSuccess: "Records loaded success",
        OrganizationNotExist: "Organization Not exit",
        GetAllVendorListSuccess: "Records loaded success",
        CustomerApproveVendor: "Approved success",
        CustomerRejectVendor: "Rejected successfully",
        CustomerOrganizationCheck: "Your Organization not exit, please check login id",
        RejectCountReached: "Rejection Count reached , Unable to reject, Please try to review and Approve",
        VendorContactSaveSuccess: "Records saved",
        VendorContactEmailCheck: "Email Exist, Please try Another Email",
        UpdateVendorContactSuccess: "Records updated",
        UpdateVendorContactFail: "Not updated",
        GetVendorContactSuccess: "Records loaded success",
        VendorOrganizationIDMissing: "Please Use query params using VendorOrganizationId",
        DeleteCustomerVendorContactDataSuccess: "Contact deleted success",
        ContactNotAvailable: "Contact Not available, Please check",
        GetAllContactInfoSuccess: "Records loaded",
        CategorySavedSuccess: "Records saved",
        CategorySavedFail: "Records not saved, Please try again",
        UpdateVendorCategorySuccess: "Records updated",
        UpdateVendorCategoryFail: "Records not updated",
        GetVendorCategorySuccess: "Records loaded success",
        VendorBankSavedSuccess: "Records saved",
        VendorBankAccountCheck: "Account Number already exist,Please try another",
        VendorBankUpdateSuccess: "Records updated",
        VendorBankUpdateFail: "Records not updated",
        GetVendorBankInfoSuccess: "Records loaded success",
        GetVendorAllBankInfoSuccess: "Records loaded success",
        FinanceDataSaveSuccess: "Records saved",
        FinanceDataSaveFail: "Records not saved",
        FinanceDataUpdateSuccess: "Records updated",
        FinanceDataUpdateFail: "Records not updated",
        FinanceDataGetSuccess: "Records loaded success",
        FinanceDataGetAllSuccess: "Records loaded success",
        CommercialDataSaveSuccess: "Records saved",
        CommercialDataSaveFail: "Records not saved",
        CommercialDataUpdateSuccess: "Records updated",
        CommercialDataUpdateFail: "Records not updated",
        CommercialDataGetSuccess: "Records loaded success",
        CommercialDataGetAllSuccess: "Records loaded success",
        SupplierQualityDataSaveSuccess: "Records saved",
        SupplierQualityDataSaveFail: "Records not saved",
        SupplierQualityDataUpdateSuccess: "Records updated",
        SupplierQualityDataUpdateFail: "Records not updated",
        SupplierQualityDataGetSuccess: "Records loaded success",
        SupplierQualityDataGetAllSuccess: "Records loaded success",
        DocumentsDataSaveSuccess: "Records saved",
        DocumentsDataSaveFail: "Records not saved",
        DocumentsDataFileValidation: "Please select file",
        DocumentsDataUpdateSuccess: "Records updated",
        DocumentsDataUpdateFail: "Records not updated",
        DocumentsDataGetSuccess: "Records loaded success",
        DocumentsDataGetAllSuccess: "Records loaded success",
        DocumentsDataDeleteSuccess: "Records Deleted",
        DocumentsDataDeleteFail: "Records not Deleted",
        ConfirmRegistrationDataSaveSuccess: "Records saved",
        ConfirmRegistrationDataSaveFail: "Records not saved",
        VendorDeleteSuccess: "Records Deleted",
        VendorDeleteFail: "Records not Deleted",
    },
    VendorSideVendorRegistrationApis: {
        VendorLoginAccessDenied: "Access Denied, Please Contact support team",
        VendorLoginPasswordNotMatch: "Password not Matched, Please Try again",
        VendorUserNotExist: "User Not exist, Please try another login",
        RoleNotSaved: "Unable To Save Vendor",
        OrganizationGeneralInfoSaveSuccess: "Records saved",
        OrganizationGeneralInfoSaveFail: "Records not saved",
        OrganizationGeneralInfoUpdateSuccess: "Records updated",
        OrganizationGeneralInfoUpdateFail: "Records not updated",
        OrganizationGeneralInfoGetSuccess: "Records loaded success",
        OrganizationGeneralInfoGetAllSuccess: "Records loaded success",
        OrganizationGeneralInfoGetNotAllowedRegistration: "Registration not allowed",
        OrganizationGeneralInfoVendorEmailCheck: "Email ID is already registered with another vendor. Please try using a different email ID",
        CountryStateCityCheck: "Country, state , city , combination is wrong , please check the country, state, and city",
        OrganizationNotExist: "Organization Not exit",
        CustomerOrganizationCheck: "Your Organization not exit, please check login id",
        ContactEmailCheck: "Email exist, Please try Another Email",
        ContactSaveSuccess: "Records saved",
        ContactSaveFail: "Records not saved",
        ContactUpdateSuccess: "Records updated",
        ContactUpdateFail: "Records not updated",
        ContactGetSuccess: "Records loaded success",
        ContactGetAllSuccess: "Records loaded success",
        ContactNotAvailable: "Contact Not available, Please check",
        VendorOrganizationIDMissing: "Please Use query params using VendorOrganizationId",
        CategorySaveSuccess: "Records saved",
        CategorySaveFail: "Records not saved",
        CategoryUpdateSuccess: "Records updated",
        CategoryUpdateFail: "Records not updated",
        CategoryGetSuccess: "Records loaded success",
        CategoryGetAllSuccess: "Records loaded success",
        CategorySaveFailAlreadyExist: "Category already exist",
        VendorBankAccountCheck: "Account Number already exist,Please try another",
        VendorBankSaveSuccess: "Records saved",
        VendorBankSaveFail: "Records not saved",
        VendorBankUpdateSuccess: "Records updated",
        VendorBankUpdateFail: "Records not updated",
        VendorBankGetSuccess: "Records loaded success",
        VendorBankGetAllSuccess: "Records loaded success",
        FinanceDataSaveSuccess: "Records saved",
        FinanceDataSaveFail: "Records not saved",
        FinanceDataUpdateSuccess: "Records updated",
        FinanceDataUpdateFail: "Records not updated",
        FinanceDataGetSuccess: "Records loaded success",
        FinanceDataGetAllSuccess: "Records loaded success",
        CommercialDataSaveSuccess: "Records saved",
        CommercialDataSaveFail: "Records not saved",
        CommercialDataUpdateSuccess: "Records updated",
        CommercialDataUpdateFail: "Records not updated",
        CommercialDataGetSuccess: "Records loaded success",
        CommercialDataGetAllSuccess: "Records loaded success",
        SupplierQualityDataSaveSuccess: "Records saved",
        SupplierQualityDataSaveFail: "Records not saved",
        SupplierQualityDataUpdateSuccess: "Records updated",
        SupplierQualityDataUpdateFail: "Records not updated",
        SupplierQualityDataGetSuccess: "Records loaded success",
        SupplierQualityDataGetAllSuccess: "Records loaded success",
        DocumentsDataSaveSuccess: "Records saved",
        DocumentsDataSaveFail: "Records not saved",
        DocumentsDataFileValidation: "Please select file",
        DocumentsDataUpdateSuccess: "Records updated",
        DocumentsDataUpdateFail: "Records not updated",
        DocumentsDataGetSuccess: "Records loaded success",
        DocumentsDataGetAllSuccess: "Records loaded success",
        DocumentsDataDeleteSuccess: "Records Deleted",
        DocumentsDataDeleteFail: "Records not Deleted",
        ConfirmRegistrationDataSaveSuccess: "Records saved",
        ConfirmRegistrationDataSaveFail: "Records not saved",
        VendorDeleteSuccess: "Records Deleted",
        VendorDeleteFail: "Records not Deleted",
        ReApprovalSuccess: "Re approval forward to Customer Success",
        ReApprovalFail: "Re Approval Update Fail",
        ReApprovalReached: "You have Reached Maximum Number of re Approval Process",
    },
    VendorSettingApis: {
        GetVendorUserProfileSuccess: "Records loaded success"
    },

    VendorResetPasswordMessages: {
        ErrorMessage: "Something Went Wrong",
        InsufficientData: "Insufficient Data",
        AccountNotExist: "Account Not exit Please Sign Up First",
        ForgotPasswordOTPSubject: "Forgot Password OTP",
        OtpMessage: "OTP Send Successfully",
        ResendOTPError: 'Resed OTP Not Allow First Initiate The Password Reset',
        OtpMisMatched: 'OTP Not Matched Please Try Again',
        OtpMatched: 'OTP Verify Successfully',
        OTPNotVerified: 'OTP not veryfied please forgot again',
        PasswordUpdated: 'Password Update Successfully',
    },

    EmailCronApis: {
        IncompleteMailSend: "Email send success"
    },

    NonRegisterVendorAPis: {
        VendorRegisterUniqueEmailFail: "Email Id Already exist",
        VendorRegisterSuccess: "Records saved",
        VendorRegisterFail: "Records not saved",
        VendorRegisterEmailAlreadyExist: "Email Id Already Exist, please try another email Id.",
        VendorGetSingleInfoSuccess: "Records loaded",
        VendorGetAllListNonRegisterSuccess: "Records loaded",
        VendorInfoUpdateSuccess: "Records updated",
        VendorInfoUpdateFail: "Records not updated",
        VendorListPrCreationSuccess: "Records loaded",
        VendorDeleteFail: "Records not deleted",
        VendorDeleteSuccess: "Records deleted",
        NotExist: "Not Exist"
    },

    ProjectNameAndNumberAPis: {
        ProjectNameAndNumberCreationSuccess: "Records saved",
        ProjectNameAndNumberCreationFail: "Records Not save",
        ProjectNameAndNumberUpdateSuccess: "Records updated",
        ProjectNameAndNumberUpdateFail: "Records Not updated",
        ProjectNameAlreadyExistError: "Project Name Already Exist",
        ProjectNumberAlreadyExitError: "Project Number Already Exist",
        ProjectNameAndNumberGetSuccess: "Project List Loaded Success",
        ProjectNameAndNumberGetFail: "Access Denied, Please Contact Administrator",
        ProjectAssignedNotExist: "Project Assigned To User Not Exist For this Organization"

    },
    RfqAPis: {
        RfqTestAPiResponseMessage: "Rfq Test api running success",
        RfqTryCatchErrorResponseMessage: "Access Denied , Please contact administrator",
        RfqProjectDetailsWithPrLoadedSuccess: "Records loaded success",
        RfqCreationSuccessMessage: "Records saved",
        RfqCreationFailedMessage: "Records not saved , Something went wrong",
        RfqListGetFailMessage: "Records Not loaded , something went wrong",
        RfqListGetSuccessMessage: "Records loaded success",
        RfqDetailsGetSuccessMessage: "Records loaded success",
        RfqDetailsGetFailMessage: "Records not found",
        RfqCustomerOrgValidationMessage: "Organization Not exist"
    },

    TaxModuleMessages: {
        TaxExists: "The Tax Name Is Already Exists, Please Provide An Different Name",
        ProvideTaxIds: "Please Provide Tax Ids",
    },
    // Table Alter Value 
    tableAlter: false
};

module.exports = Messages;
